; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\..\output\bsp_generaltim.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\bsp_generaltim.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS -I..\..\User -I..\..\Libraries\FWlib\inc -I..\..\User\GeneralTim -IF:\单片机\智能农装\机械摄像头完全体\Project\RVMDK（uv5）\RTE -ID:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -ID:\Keil\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=515 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\..\output\bsp_generaltim.crf ..\..\User\GeneralTim\bsp_GeneralTim.c]
                          THUMB

                          AREA ||i.GENERAL_TIM_CH1_CHANGE||, CODE, READONLY, ALIGN=2

                  GENERAL_TIM_CH1_CHANGE PROC
;;;124    
;;;125    void GENERAL_TIM_CH1_CHANGE(uint16_t val) {
000000  b51f              PUSH     {r0-r4,lr}
000002  4604              MOV      r4,r0
;;;126    	TIM_OCInitTypeDef  TIM_OCInitStructure;
;;;127    	// 配置为PWM模式1
;;;128    	TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;
000004  2060              MOVS     r0,#0x60
000006  f8ad0000          STRH     r0,[sp,#0]
;;;129    	// 输出使能
;;;130    	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
00000a  2001              MOVS     r0,#1
00000c  f8ad0002          STRH     r0,[sp,#2]
;;;131    	// 输出通道电平极性配置	
;;;132    	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
000010  2000              MOVS     r0,#0
000012  f8ad0008          STRH     r0,[sp,#8]
;;;133    	
;;;134    	TIM_OCInitStructure.TIM_Pulse = val;
000016  f8ad4006          STRH     r4,[sp,#6]
;;;135    	TIM_OC1Init(GENERAL_TIM, &TIM_OCInitStructure);
00001a  4669              MOV      r1,sp
00001c  4803              LDR      r0,|L1.44|
00001e  f7fffffe          BL       TIM_OC1Init
;;;136    	TIM_OC1PreloadConfig(GENERAL_TIM, TIM_OCPreload_Enable);
000022  2108              MOVS     r1,#8
000024  4801              LDR      r0,|L1.44|
000026  f7fffffe          BL       TIM_OC1PreloadConfig
;;;137    }
00002a  bd1f              POP      {r0-r4,pc}
;;;138    
                          ENDP

                  |L1.44|
                          DCD      0x40000400

                          AREA ||i.GENERAL_TIM_CH2_CHANGE||, CODE, READONLY, ALIGN=2

                  GENERAL_TIM_CH2_CHANGE PROC
;;;138    
;;;139    void GENERAL_TIM_CH2_CHANGE(uint16_t val) {
000000  b51f              PUSH     {r0-r4,lr}
000002  4604              MOV      r4,r0
;;;140    	TIM_OCInitTypeDef  TIM_OCInitStructure;
;;;141    	// 配置为PWM模式1
;;;142    	TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;
000004  2060              MOVS     r0,#0x60
000006  f8ad0000          STRH     r0,[sp,#0]
;;;143    	// 输出使能
;;;144    	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
00000a  2001              MOVS     r0,#1
00000c  f8ad0002          STRH     r0,[sp,#2]
;;;145    	// 输出通道电平极性配置	
;;;146    	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
000010  2000              MOVS     r0,#0
000012  f8ad0008          STRH     r0,[sp,#8]
;;;147    	
;;;148    	TIM_OCInitStructure.TIM_Pulse = val;
000016  f8ad4006          STRH     r4,[sp,#6]
;;;149    	TIM_OC2Init(GENERAL_TIM, &TIM_OCInitStructure);
00001a  4669              MOV      r1,sp
00001c  4803              LDR      r0,|L2.44|
00001e  f7fffffe          BL       TIM_OC2Init
;;;150    	TIM_OC2PreloadConfig(GENERAL_TIM, TIM_OCPreload_Enable);
000022  2108              MOVS     r1,#8
000024  4801              LDR      r0,|L2.44|
000026  f7fffffe          BL       TIM_OC2PreloadConfig
;;;151    }
00002a  bd1f              POP      {r0-r4,pc}
;;;152    void GENERAL_TIM_CH3_CHANGE(uint16_t val) {
                          ENDP

                  |L2.44|
                          DCD      0x40000400

                          AREA ||i.GENERAL_TIM_CH3_CHANGE||, CODE, READONLY, ALIGN=2

                  GENERAL_TIM_CH3_CHANGE PROC
;;;151    }
;;;152    void GENERAL_TIM_CH3_CHANGE(uint16_t val) {
000000  b51f              PUSH     {r0-r4,lr}
000002  4604              MOV      r4,r0
;;;153    	TIM_OCInitTypeDef  TIM_OCInitStructure;
;;;154    	// 配置为PWM模式1
;;;155    	TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;
000004  2060              MOVS     r0,#0x60
000006  f8ad0000          STRH     r0,[sp,#0]
;;;156    	// 输出使能
;;;157    	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
00000a  2001              MOVS     r0,#1
00000c  f8ad0002          STRH     r0,[sp,#2]
;;;158    	// 输出通道电平极性配置	
;;;159    	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
000010  2000              MOVS     r0,#0
000012  f8ad0008          STRH     r0,[sp,#8]
;;;160    	
;;;161    	TIM_OCInitStructure.TIM_Pulse = val;
000016  f8ad4006          STRH     r4,[sp,#6]
;;;162    	TIM_OC3Init(GENERAL_TIM, &TIM_OCInitStructure);
00001a  4669              MOV      r1,sp
00001c  4803              LDR      r0,|L3.44|
00001e  f7fffffe          BL       TIM_OC3Init
;;;163    	TIM_OC3PreloadConfig(GENERAL_TIM, TIM_OCPreload_Enable);
000022  2108              MOVS     r1,#8
000024  4801              LDR      r0,|L3.44|
000026  f7fffffe          BL       TIM_OC3PreloadConfig
;;;164    }
00002a  bd1f              POP      {r0-r4,pc}
;;;165    void GENERAL_TIM_CH4_CHANGE(uint16_t val) {
                          ENDP

                  |L3.44|
                          DCD      0x40000400

                          AREA ||i.GENERAL_TIM_CH4_CHANGE||, CODE, READONLY, ALIGN=2

                  GENERAL_TIM_CH4_CHANGE PROC
;;;164    }
;;;165    void GENERAL_TIM_CH4_CHANGE(uint16_t val) {
000000  b51f              PUSH     {r0-r4,lr}
000002  4604              MOV      r4,r0
;;;166    	TIM_OCInitTypeDef  TIM_OCInitStructure;
;;;167    	// 配置为PWM模式1
;;;168    	TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;
000004  2060              MOVS     r0,#0x60
000006  f8ad0000          STRH     r0,[sp,#0]
;;;169    	// 输出使能
;;;170    	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
00000a  2001              MOVS     r0,#1
00000c  f8ad0002          STRH     r0,[sp,#2]
;;;171    	// 输出通道电平极性配置	
;;;172    	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
000010  2000              MOVS     r0,#0
000012  f8ad0008          STRH     r0,[sp,#8]
;;;173    	
;;;174    	TIM_OCInitStructure.TIM_Pulse = val;
000016  f8ad4006          STRH     r4,[sp,#6]
;;;175    	TIM_OC4Init(GENERAL_TIM, &TIM_OCInitStructure);
00001a  4669              MOV      r1,sp
00001c  4803              LDR      r0,|L4.44|
00001e  f7fffffe          BL       TIM_OC4Init
;;;176    	TIM_OC4PreloadConfig(GENERAL_TIM, TIM_OCPreload_Enable);
000022  2108              MOVS     r1,#8
000024  4801              LDR      r0,|L4.44|
000026  f7fffffe          BL       TIM_OC4PreloadConfig
;;;177    }
00002a  bd1f              POP      {r0-r4,pc}
;;;178    /*********************************************END OF FILE**********************/
                          ENDP

                  |L4.44|
                          DCD      0x40000400

                          AREA ||i.GENERAL_TIM_GPIO_Config||, CODE, READONLY, ALIGN=2

                  GENERAL_TIM_GPIO_Config PROC
;;;2      
;;;3      static void GENERAL_TIM_GPIO_Config(void) 
000000  b508              PUSH     {r3,lr}
;;;4      {
;;;5        GPIO_InitTypeDef GPIO_InitStructure;
;;;6      
;;;7        // 输出比较通道1 GPIO 初始化
;;;8      	RCC_APB2PeriphClockCmd(GENERAL_TIM_CH1_GPIO_CLK, ENABLE);
000002  2101              MOVS     r1,#1
000004  2004              MOVS     r0,#4
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;9        GPIO_InitStructure.GPIO_Pin =  GENERAL_TIM_CH1_PIN;
00000a  2040              MOVS     r0,#0x40
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;10       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
000010  2018              MOVS     r0,#0x18
000012  f88d0003          STRB     r0,[sp,#3]
;;;11       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000016  2003              MOVS     r0,#3
000018  f88d0002          STRB     r0,[sp,#2]
;;;12       GPIO_Init(GENERAL_TIM_CH1_PORT, &GPIO_InitStructure);
00001c  4669              MOV      r1,sp
00001e  481b              LDR      r0,|L5.140|
000020  f7fffffe          BL       GPIO_Init
;;;13     	
;;;14     	// 输出比较通道2 GPIO 初始化
;;;15     	RCC_APB2PeriphClockCmd(GENERAL_TIM_CH2_GPIO_CLK, ENABLE);
000024  2101              MOVS     r1,#1
000026  2004              MOVS     r0,#4
000028  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;16       GPIO_InitStructure.GPIO_Pin =  GENERAL_TIM_CH2_PIN;
00002c  2080              MOVS     r0,#0x80
00002e  f8ad0000          STRH     r0,[sp,#0]
;;;17       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
000032  2018              MOVS     r0,#0x18
000034  f88d0003          STRB     r0,[sp,#3]
;;;18       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000038  2003              MOVS     r0,#3
00003a  f88d0002          STRB     r0,[sp,#2]
;;;19       GPIO_Init(GENERAL_TIM_CH2_PORT, &GPIO_InitStructure);
00003e  4669              MOV      r1,sp
000040  4812              LDR      r0,|L5.140|
000042  f7fffffe          BL       GPIO_Init
;;;20     	
;;;21     	// 输出比较通道3 GPIO 初始化
;;;22     	RCC_APB2PeriphClockCmd(GENERAL_TIM_CH3_GPIO_CLK, ENABLE);
000046  2101              MOVS     r1,#1
000048  2008              MOVS     r0,#8
00004a  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;23       GPIO_InitStructure.GPIO_Pin =  GENERAL_TIM_CH3_PIN;
00004e  2001              MOVS     r0,#1
000050  f8ad0000          STRH     r0,[sp,#0]
;;;24       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
000054  2018              MOVS     r0,#0x18
000056  f88d0003          STRB     r0,[sp,#3]
;;;25       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00005a  2003              MOVS     r0,#3
00005c  f88d0002          STRB     r0,[sp,#2]
;;;26       GPIO_Init(GENERAL_TIM_CH3_PORT, &GPIO_InitStructure);
000060  4669              MOV      r1,sp
000062  480b              LDR      r0,|L5.144|
000064  f7fffffe          BL       GPIO_Init
;;;27     	
;;;28     	// 输出比较通道4 GPIO 初始化
;;;29     	RCC_APB2PeriphClockCmd(GENERAL_TIM_CH4_GPIO_CLK, ENABLE);
000068  2101              MOVS     r1,#1
00006a  2008              MOVS     r0,#8
00006c  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;30       GPIO_InitStructure.GPIO_Pin =  GENERAL_TIM_CH4_PIN;
000070  2002              MOVS     r0,#2
000072  f8ad0000          STRH     r0,[sp,#0]
;;;31       GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
000076  2018              MOVS     r0,#0x18
000078  f88d0003          STRB     r0,[sp,#3]
;;;32       GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00007c  2003              MOVS     r0,#3
00007e  f88d0002          STRB     r0,[sp,#2]
;;;33       GPIO_Init(GENERAL_TIM_CH4_PORT, &GPIO_InitStructure);
000082  4669              MOV      r1,sp
000084  4802              LDR      r0,|L5.144|
000086  f7fffffe          BL       GPIO_Init
;;;34     }
00008a  bd08              POP      {r3,pc}
;;;35     
                          ENDP

                  |L5.140|
                          DCD      0x40010800
                  |L5.144|
                          DCD      0x40010c00

                          AREA ||i.GENERAL_TIM_Init||, CODE, READONLY, ALIGN=1

                  GENERAL_TIM_Init PROC
;;;118    
;;;119    void GENERAL_TIM_Init(void)
000000  b510              PUSH     {r4,lr}
;;;120    {
;;;121    	GENERAL_TIM_GPIO_Config();
000002  f7fffffe          BL       GENERAL_TIM_GPIO_Config
;;;122    	GENERAL_TIM_Mode_Config();		
000006  f7fffffe          BL       GENERAL_TIM_Mode_Config
;;;123    }
00000a  bd10              POP      {r4,pc}
;;;124    
                          ENDP


                          AREA ||i.GENERAL_TIM_Mode_Config||, CODE, READONLY, ALIGN=2

                  GENERAL_TIM_Mode_Config PROC
;;;57     
;;;58     static void GENERAL_TIM_Mode_Config(void)
000000  b5f0              PUSH     {r4-r7,lr}
;;;59     {
000002  b087              SUB      sp,sp,#0x1c
;;;60       // 开启定时器时钟,即内部时钟CK_INT=72M
;;;61     	GENERAL_TIM_APBxClock_FUN(GENERAL_TIM_CLK,ENABLE);
000004  2101              MOVS     r1,#1
000006  2002              MOVS     r0,#2
000008  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;62     
;;;63     /*--------------------时基结构体初始化-------------------------*/
;;;64     	// 配置周期，这里配置为100K
;;;65     	
;;;66       TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;67     	// 自动重装载寄存器的值，累计TIM_Period+1个频率后产生一个更新或者中断
;;;68     	TIM_TimeBaseStructure.TIM_Period=GENERAL_TIM_Period;	
00000c  20c7              MOVS     r0,#0xc7
00000e  f8ad0014          STRH     r0,[sp,#0x14]
;;;69     	// 驱动CNT计数器的时钟 = Fck_int/(psc+1)
;;;70     	TIM_TimeBaseStructure.TIM_Prescaler= GENERAL_TIM_Prescaler;	
000012  f641401f          MOV      r0,#0x1c1f
000016  f8ad0010          STRH     r0,[sp,#0x10]
;;;71     	// 时钟分频因子 ，配置死区时间时需要用到
;;;72     	TIM_TimeBaseStructure.TIM_ClockDivision=TIM_CKD_DIV1;		
00001a  2000              MOVS     r0,#0
00001c  f8ad0016          STRH     r0,[sp,#0x16]
;;;73     	// 计数器计数模式，设置为向上计数
;;;74     	TIM_TimeBaseStructure.TIM_CounterMode=TIM_CounterMode_Up;		
000020  f8ad0012          STRH     r0,[sp,#0x12]
;;;75     	// 重复计数器的值，没用到不用管
;;;76     	TIM_TimeBaseStructure.TIM_RepetitionCounter=0;	
000024  f88d0018          STRB     r0,[sp,#0x18]
;;;77     	// 初始化定时器
;;;78     	TIM_TimeBaseInit(GENERAL_TIM, &TIM_TimeBaseStructure);
000028  a904              ADD      r1,sp,#0x10
00002a  481f              LDR      r0,|L7.168|
00002c  f7fffffe          BL       TIM_TimeBaseInit
;;;79     
;;;80     	/*--------------------输出比较结构体初始化-------------------*/	
;;;81     	// 占空比配置
;;;82     	uint16_t CCR1_Val = 5;
000030  2405              MOVS     r4,#5
;;;83     	uint16_t CCR2_Val = 5;
000032  2505              MOVS     r5,#5
;;;84     	uint16_t CCR3_Val = 8;
000034  2608              MOVS     r6,#8
;;;85     	uint16_t CCR4_Val = 15;
000036  270f              MOVS     r7,#0xf
;;;86     	
;;;87     	TIM_OCInitTypeDef  TIM_OCInitStructure;
;;;88     	// 配置为PWM模式1
;;;89     	TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;
000038  2060              MOVS     r0,#0x60
00003a  f8ad0000          STRH     r0,[sp,#0]
;;;90     	// 输出使能
;;;91     	TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
00003e  2001              MOVS     r0,#1
000040  f8ad0002          STRH     r0,[sp,#2]
;;;92     	// 输出通道电平极性配置	
;;;93     	TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;
000044  2000              MOVS     r0,#0
000046  f8ad0008          STRH     r0,[sp,#8]
;;;94     	
;;;95     	// 输出比较通道 1
;;;96     	TIM_OCInitStructure.TIM_Pulse = CCR1_Val;
00004a  f8ad4006          STRH     r4,[sp,#6]
;;;97     	TIM_OC1Init(GENERAL_TIM, &TIM_OCInitStructure);
00004e  4669              MOV      r1,sp
000050  4815              LDR      r0,|L7.168|
000052  f7fffffe          BL       TIM_OC1Init
;;;98     	TIM_OC1PreloadConfig(GENERAL_TIM, TIM_OCPreload_Enable);
000056  2108              MOVS     r1,#8
000058  4813              LDR      r0,|L7.168|
00005a  f7fffffe          BL       TIM_OC1PreloadConfig
;;;99     	
;;;100    	// 输出比较通道 2
;;;101    	TIM_OCInitStructure.TIM_Pulse = CCR2_Val;
00005e  f8ad5006          STRH     r5,[sp,#6]
;;;102    	TIM_OC2Init(GENERAL_TIM, &TIM_OCInitStructure);
000062  4669              MOV      r1,sp
000064  4810              LDR      r0,|L7.168|
000066  f7fffffe          BL       TIM_OC2Init
;;;103    	TIM_OC2PreloadConfig(GENERAL_TIM, TIM_OCPreload_Enable);
00006a  2108              MOVS     r1,#8
00006c  480e              LDR      r0,|L7.168|
00006e  f7fffffe          BL       TIM_OC2PreloadConfig
;;;104    	
;;;105    	// 输出比较通道 3
;;;106    	TIM_OCInitStructure.TIM_Pulse = CCR3_Val;
000072  f8ad6006          STRH     r6,[sp,#6]
;;;107    	TIM_OC3Init(GENERAL_TIM, &TIM_OCInitStructure);
000076  4669              MOV      r1,sp
000078  480b              LDR      r0,|L7.168|
00007a  f7fffffe          BL       TIM_OC3Init
;;;108    	TIM_OC3PreloadConfig(GENERAL_TIM, TIM_OCPreload_Enable);
00007e  2108              MOVS     r1,#8
000080  4809              LDR      r0,|L7.168|
000082  f7fffffe          BL       TIM_OC3PreloadConfig
;;;109    	
;;;110    	// 输出比较通道 4
;;;111    	TIM_OCInitStructure.TIM_Pulse = CCR4_Val;
000086  f8ad7006          STRH     r7,[sp,#6]
;;;112    	TIM_OC4Init(GENERAL_TIM, &TIM_OCInitStructure);
00008a  4669              MOV      r1,sp
00008c  4806              LDR      r0,|L7.168|
00008e  f7fffffe          BL       TIM_OC4Init
;;;113    	TIM_OC4PreloadConfig(GENERAL_TIM, TIM_OCPreload_Enable);
000092  2108              MOVS     r1,#8
000094  4804              LDR      r0,|L7.168|
000096  f7fffffe          BL       TIM_OC4PreloadConfig
;;;114    	
;;;115    	// 使能计数器
;;;116    	TIM_Cmd(GENERAL_TIM, ENABLE);
00009a  2101              MOVS     r1,#1
00009c  4802              LDR      r0,|L7.168|
00009e  f7fffffe          BL       TIM_Cmd
;;;117    }
0000a2  b007              ADD      sp,sp,#0x1c
0000a4  bdf0              POP      {r4-r7,pc}
;;;118    
                          ENDP

0000a6  0000              DCW      0x0000
                  |L7.168|
                          DCD      0x40000400
