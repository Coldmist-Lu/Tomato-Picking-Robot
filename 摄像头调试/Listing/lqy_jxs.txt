; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\..\output\lqy_jxs.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\lqy_jxs.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS -I..\..\User -I..\..\Libraries\FWlib\inc -I..\..\User\GeneralTim -IF:\单片机\智能农装\机械摄像头完全体\Project\RVMDK（uv5）\RTE -ID:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -ID:\Keil\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=515 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\..\output\lqy_jxs.crf ..\..\User\lqy_jxs.c]
                          THUMB

                          AREA ||i.Get_PingPangLEFT||, CODE, READONLY, ALIGN=2

                  Get_PingPangLEFT PROC
;;;40     
;;;41     void Get_PingPangLEFT() {
000000  b510              PUSH     {r4,lr}
;;;42     	// 右侧PWM_CH1：5-12	  5缩		12张
;;;43     	// 左侧PWM_CH2：8-11  8缩		11张
;;;44     	// 爪子PWM_CH3：6-10  6闭合	10张
;;;45     	// 底盘PWM_CH4：5-25  5为右侧， 25为左侧。
;;;46     	GENERAL_TIM_CH4_CHANGE(25);
000002  2019              MOVS     r0,#0x19
000004  f7fffffe          BL       GENERAL_TIM_CH4_CHANGE
;;;47     	delay(0xffffff);
000008  f06f407f          MVN      r0,#0xff000000
00000c  f7fffffe          BL       delay
;;;48     	GENERAL_TIM_CH3_CHANGE(6);
000010  2006              MOVS     r0,#6
000012  f7fffffe          BL       GENERAL_TIM_CH3_CHANGE
;;;49     	delay(0x1fffff);
000016  4816              LDR      r0,|L1.112|
000018  f7fffffe          BL       delay
;;;50     	GENERAL_TIM_CH3_CHANGE(10);		//准备
00001c  200a              MOVS     r0,#0xa
00001e  f7fffffe          BL       GENERAL_TIM_CH3_CHANGE
;;;51     	delay(0xffffff);
000022  f06f407f          MVN      r0,#0xff000000
000026  f7fffffe          BL       delay
;;;52     	GENERAL_TIM_CH1_CHANGE(12);		//伸脖子
00002a  200c              MOVS     r0,#0xc
00002c  f7fffffe          BL       GENERAL_TIM_CH1_CHANGE
;;;53     	GENERAL_TIM_CH2_CHANGE(11);
000030  200b              MOVS     r0,#0xb
000032  f7fffffe          BL       GENERAL_TIM_CH2_CHANGE
;;;54     	delay(0x6fffff);
000036  480f              LDR      r0,|L1.116|
000038  f7fffffe          BL       delay
;;;55     	GENERAL_TIM_CH3_CHANGE(4);		//合爪
00003c  2004              MOVS     r0,#4
00003e  f7fffffe          BL       GENERAL_TIM_CH3_CHANGE
;;;56     	delay(0x6fffff);
000042  480c              LDR      r0,|L1.116|
000044  f7fffffe          BL       delay
;;;57     	GENERAL_TIM_CH1_CHANGE(5);		//收脖子
000048  2005              MOVS     r0,#5
00004a  f7fffffe          BL       GENERAL_TIM_CH1_CHANGE
;;;58     	GENERAL_TIM_CH2_CHANGE(5);
00004e  2005              MOVS     r0,#5
000050  f7fffffe          BL       GENERAL_TIM_CH2_CHANGE
;;;59     	delay(0x6fffff);
000054  4807              LDR      r0,|L1.116|
000056  f7fffffe          BL       delay
;;;60     	GENERAL_TIM_CH4_CHANGE(15);		//回中
00005a  200f              MOVS     r0,#0xf
00005c  f7fffffe          BL       GENERAL_TIM_CH4_CHANGE
;;;61     	delay(0x6fffff);
000060  4804              LDR      r0,|L1.116|
000062  f7fffffe          BL       delay
;;;62     	GENERAL_TIM_CH3_CHANGE(10);		//开爪
000066  200a              MOVS     r0,#0xa
000068  f7fffffe          BL       GENERAL_TIM_CH3_CHANGE
;;;63     }
00006c  bd10              POP      {r4,pc}
                          ENDP

00006e  0000              DCW      0x0000
                  |L1.112|
                          DCD      0x001fffff
                  |L1.116|
                          DCD      0x006fffff

                          AREA ||i.Get_PingPangRIGHT||, CODE, READONLY, ALIGN=2

                  Get_PingPangRIGHT PROC
;;;16     
;;;17     void Get_PingPangRIGHT() {
000000  b510              PUSH     {r4,lr}
;;;18     	// 右侧PWM_CH1：5-12	  5缩		12张
;;;19     	// 左侧PWM_CH2：8-11  8缩5		11张
;;;20     	// 爪子PWM_CH3：6-10  6闭合	10张
;;;21     	// 底盘PWM_CH4：5-25  5为右侧， 25为左侧。
;;;22     	GENERAL_TIM_CH4_CHANGE(5);
000002  2005              MOVS     r0,#5
000004  f7fffffe          BL       GENERAL_TIM_CH4_CHANGE
;;;23     	delay(0xffffff);
000008  f06f407f          MVN      r0,#0xff000000
00000c  f7fffffe          BL       delay
;;;24     	GENERAL_TIM_CH3_CHANGE(6);
000010  2006              MOVS     r0,#6
000012  f7fffffe          BL       GENERAL_TIM_CH3_CHANGE
;;;25     	delay(0x1fffff);
000016  4816              LDR      r0,|L2.112|
000018  f7fffffe          BL       delay
;;;26     	GENERAL_TIM_CH3_CHANGE(10);		//准备
00001c  200a              MOVS     r0,#0xa
00001e  f7fffffe          BL       GENERAL_TIM_CH3_CHANGE
;;;27     	delay(0xffffff);
000022  f06f407f          MVN      r0,#0xff000000
000026  f7fffffe          BL       delay
;;;28     	GENERAL_TIM_CH1_CHANGE(12);		//伸脖子
00002a  200c              MOVS     r0,#0xc
00002c  f7fffffe          BL       GENERAL_TIM_CH1_CHANGE
;;;29     	GENERAL_TIM_CH2_CHANGE(11);
000030  200b              MOVS     r0,#0xb
000032  f7fffffe          BL       GENERAL_TIM_CH2_CHANGE
;;;30     	delay(0x6fffff);
000036  480f              LDR      r0,|L2.116|
000038  f7fffffe          BL       delay
;;;31     	GENERAL_TIM_CH3_CHANGE(4);		//合爪
00003c  2004              MOVS     r0,#4
00003e  f7fffffe          BL       GENERAL_TIM_CH3_CHANGE
;;;32     	delay(0x6fffff);
000042  480c              LDR      r0,|L2.116|
000044  f7fffffe          BL       delay
;;;33     	GENERAL_TIM_CH1_CHANGE(5);		//收脖子
000048  2005              MOVS     r0,#5
00004a  f7fffffe          BL       GENERAL_TIM_CH1_CHANGE
;;;34     	GENERAL_TIM_CH2_CHANGE(5);
00004e  2005              MOVS     r0,#5
000050  f7fffffe          BL       GENERAL_TIM_CH2_CHANGE
;;;35     	delay(0x6fffff);
000054  4807              LDR      r0,|L2.116|
000056  f7fffffe          BL       delay
;;;36     	GENERAL_TIM_CH4_CHANGE(15);		//回中
00005a  200f              MOVS     r0,#0xf
00005c  f7fffffe          BL       GENERAL_TIM_CH4_CHANGE
;;;37     	delay(0x6fffff);
000060  4804              LDR      r0,|L2.116|
000062  f7fffffe          BL       delay
;;;38     	GENERAL_TIM_CH3_CHANGE(10);		//开爪
000066  200a              MOVS     r0,#0xa
000068  f7fffffe          BL       GENERAL_TIM_CH3_CHANGE
;;;39     }
00006c  bd10              POP      {r4,pc}
;;;40     
                          ENDP

00006e  0000              DCW      0x0000
                  |L2.112|
                          DCD      0x001fffff
                  |L2.116|
                          DCD      0x006fffff

                          AREA ||i.ZhuaZhua_Init||, CODE, READONLY, ALIGN=2

                  ZhuaZhua_Init PROC
;;;7      
;;;8      void ZhuaZhua_Init() {
000000  b510              PUSH     {r4,lr}
;;;9      	delay(0xafffff);
000002  4809              LDR      r0,|L3.40|
000004  f7fffffe          BL       delay
;;;10     	GENERAL_TIM_CH3_CHANGE(6);
000008  2006              MOVS     r0,#6
00000a  f7fffffe          BL       GENERAL_TIM_CH3_CHANGE
;;;11     	GENERAL_TIM_CH4_CHANGE(15);
00000e  200f              MOVS     r0,#0xf
000010  f7fffffe          BL       GENERAL_TIM_CH4_CHANGE
;;;12     	delay(0xfffff);
000014  4805              LDR      r0,|L3.44|
000016  f7fffffe          BL       delay
;;;13     	GENERAL_TIM_CH1_CHANGE(5);
00001a  2005              MOVS     r0,#5
00001c  f7fffffe          BL       GENERAL_TIM_CH1_CHANGE
;;;14     	GENERAL_TIM_CH2_CHANGE(5);
000020  2005              MOVS     r0,#5
000022  f7fffffe          BL       GENERAL_TIM_CH2_CHANGE
;;;15     }
000026  bd10              POP      {r4,pc}
;;;16     
                          ENDP

                  |L3.40|
                          DCD      0x00afffff
                  |L3.44|
                          DCD      0x000fffff

                          AREA ||i.delay||, CODE, READONLY, ALIGN=1

                  delay PROC
;;;3      
;;;4      void delay(int cnt) {
000000  bf00              NOP      
                  |L4.2|
;;;5      	while(cnt--);
000002  0001              MOVS     r1,r0
000004  f1a00001          SUB      r0,r0,#1
000008  d1fb              BNE      |L4.2|
;;;6      }	
00000a  4770              BX       lr
;;;7      
                          ENDP

