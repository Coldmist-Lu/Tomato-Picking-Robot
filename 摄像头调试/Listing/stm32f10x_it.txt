; generated by Component: ARM Compiler 5.05 update 2 (build 169) Tool: ArmCC [4d0f38]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\..\output\stm32f10x_it.o --asm_dir=..\..\Listing\ --list_dir=..\..\Listing\ --depend=..\..\output\stm32f10x_it.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\..\Libraries\CMSIS -I..\..\User -I..\..\Libraries\FWlib\inc -I..\..\User\GeneralTim -IF:\单片机\智能农装\机械摄像头完全体\Project\RVMDK（uv5）\RTE -ID:\Keil\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\Device\Include -ID:\Keil\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=515 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER --omf_browse=..\..\output\stm32f10x_it.crf ..\..\User\stm32f10x_it.c]
                          THUMB

                          AREA ||i.BusFault_Handler||, CODE, READONLY, ALIGN=1

                  BusFault_Handler PROC
;;;91       */
;;;92     void BusFault_Handler(void)
000000  bf00              NOP      
                  |L1.2|
;;;93     {
;;;94       /* Go to infinite loop when Bus Fault exception occurs */
;;;95       while (1)
000002  e7fe              B        |L1.2|
;;;96       {
;;;97       }
;;;98     }
;;;99     
                          ENDP


                          AREA ||i.DebugMon_Handler||, CODE, READONLY, ALIGN=1

                  DebugMon_Handler PROC
;;;126      */
;;;127    void DebugMon_Handler(void)
000000  4770              BX       lr
;;;128    {
;;;129    }
;;;130    
                          ENDP


                          AREA ||i.EXTI3_IRQHandler||, CODE, READONLY, ALIGN=2

                  EXTI3_IRQHandler PROC
;;;161    /* ov7725 场中断 服务程序 */
;;;162    void OV7725_VSYNC_EXTI_INT_FUNCTION ( void )
000000  b510              PUSH     {r4,lr}
;;;163    {
;;;164        if ( EXTI_GetITStatus(OV7725_VSYNC_EXTI_LINE) != RESET ) 	//检查EXTI_Line0线路上的中断请求是否发送到了NVIC 
000002  2008              MOVS     r0,#8
000004  f7fffffe          BL       EXTI_GetITStatus
000008  b300              CBZ      r0,|L3.76|
;;;165        {
;;;166            if( Ov7725_vsync == 0 )
00000a  4811              LDR      r0,|L3.80|
00000c  7800              LDRB     r0,[r0,#0]  ; Ov7725_vsync
00000e  b978              CBNZ     r0,|L3.48|
;;;167            {
;;;168                FIFO_WRST_L(); 	                      //拉低使FIFO写(数据from摄像头)指针复位
000010  2010              MOVS     r0,#0x10
000012  4910              LDR      r1,|L3.84|
000014  6148              STR      r0,[r1,#0x14]
;;;169                FIFO_WE_H();	                        //拉高使FIFO写允许
000016  2008              MOVS     r0,#8
000018  490f              LDR      r1,|L3.88|
00001a  6008              STR      r0,[r1,#0]
;;;170                
;;;171                Ov7725_vsync = 1;	   	
00001c  2001              MOVS     r0,#1
00001e  490c              LDR      r1,|L3.80|
000020  7008              STRB     r0,[r1,#0]
;;;172                FIFO_WE_H();                          //使FIFO写允许
000022  2008              MOVS     r0,#8
000024  490c              LDR      r1,|L3.88|
000026  6008              STR      r0,[r1,#0]
;;;173                FIFO_WRST_H();                        //允许使FIFO写(数据from摄像头)指针运动
000028  2010              MOVS     r0,#0x10
00002a  490a              LDR      r1,|L3.84|
00002c  6108              STR      r0,[r1,#0x10]
00002e  e00a              B        |L3.70|
                  |L3.48|
;;;174            }
;;;175            else if( Ov7725_vsync == 1 )
000030  4807              LDR      r0,|L3.80|
000032  7800              LDRB     r0,[r0,#0]  ; Ov7725_vsync
000034  2801              CMP      r0,#1
000036  d106              BNE      |L3.70|
;;;176            {
;;;177                FIFO_WE_L();                          //拉低使FIFO写暂停
000038  2008              MOVS     r0,#8
00003a  4907              LDR      r1,|L3.88|
00003c  1d09              ADDS     r1,r1,#4
00003e  6008              STR      r0,[r1,#0]
;;;178                Ov7725_vsync = 2;
000040  2002              MOVS     r0,#2
000042  4903              LDR      r1,|L3.80|
000044  7008              STRB     r0,[r1,#0]
                  |L3.70|
;;;179            }        
;;;180            EXTI_ClearITPendingBit(OV7725_VSYNC_EXTI_LINE);		    //清除EXTI_Line0线路挂起标志位        
000046  2008              MOVS     r0,#8
000048  f7fffffe          BL       EXTI_ClearITPendingBit
                  |L3.76|
;;;181        }    
;;;182    }
00004c  bd10              POP      {r4,pc}
;;;183    
                          ENDP

00004e  0000              DCW      0x0000
                  |L3.80|
                          DCD      Ov7725_vsync
                  |L3.84|
                          DCD      0x40011000
                  |L3.88|
                          DCD      0x40011410

                          AREA ||i.HardFault_Handler||, CODE, READONLY, ALIGN=1

                  HardFault_Handler PROC
;;;65       */
;;;66     void HardFault_Handler(void)
000000  bf00              NOP      
                  |L4.2|
;;;67     {
;;;68       /* Go to infinite loop when Hard Fault exception occurs */
;;;69       while (1)
000002  e7fe              B        |L4.2|
;;;70       {
;;;71       }
;;;72     }
;;;73     
                          ENDP


                          AREA ||i.MemManage_Handler||, CODE, READONLY, ALIGN=1

                  MemManage_Handler PROC
;;;78       */
;;;79     void MemManage_Handler(void)
000000  bf00              NOP      
                  |L5.2|
;;;80     {
;;;81       /* Go to infinite loop when Memory Manage exception occurs */
;;;82       while (1)
000002  e7fe              B        |L5.2|
;;;83       {
;;;84       }
;;;85     }
;;;86     
                          ENDP


                          AREA ||i.NMI_Handler||, CODE, READONLY, ALIGN=1

                  NMI_Handler PROC
;;;56       */
;;;57     void NMI_Handler(void)
000000  4770              BX       lr
;;;58     {
;;;59     }
;;;60     
                          ENDP


                          AREA ||i.PendSV_Handler||, CODE, READONLY, ALIGN=1

                  PendSV_Handler PROC
;;;135      */
;;;136    void PendSV_Handler(void)
000000  4770              BX       lr
;;;137    {
;;;138    }
;;;139    
                          ENDP


                          AREA ||i.SVC_Handler||, CODE, READONLY, ALIGN=1

                  SVC_Handler PROC
;;;117      */
;;;118    void SVC_Handler(void)
000000  4770              BX       lr
;;;119    {
;;;120    }
;;;121    
                          ENDP


                          AREA ||i.SysTick_Handler||, CODE, READONLY, ALIGN=2

                  SysTick_Handler PROC
;;;144      */
;;;145    void SysTick_Handler(void)
000000  b510              PUSH     {r4,lr}
;;;146    {	
;;;147    	unsigned char i;
;;;148    	
;;;149    	TimingDelay_Decrement();  
000002  f7fffffe          BL       TimingDelay_Decrement
;;;150    	TimeStamp_Increment(); 
000006  f7fffffe          BL       TimeStamp_Increment
;;;151    	
;;;152    	for(i=0;i<NumOfTask;i++)
00000a  2400              MOVS     r4,#0
00000c  e00c              B        |L9.40|
                  |L9.14|
;;;153    	{
;;;154    		if(Task_Delay[i])
00000e  4808              LDR      r0,|L9.48|
000010  f8500024          LDR      r0,[r0,r4,LSL #2]
000014  b130              CBZ      r0,|L9.36|
;;;155    		{
;;;156    			Task_Delay[i]--;
000016  4806              LDR      r0,|L9.48|
000018  f8500024          LDR      r0,[r0,r4,LSL #2]
00001c  1e40              SUBS     r0,r0,#1
00001e  4904              LDR      r1,|L9.48|
000020  f8410024          STR      r0,[r1,r4,LSL #2]
                  |L9.36|
000024  1c60              ADDS     r0,r4,#1              ;152
000026  b2c4              UXTB     r4,r0                 ;152
                  |L9.40|
000028  2c03              CMP      r4,#3                 ;152
00002a  dbf0              BLT      |L9.14|
;;;157    		}
;;;158    	}
;;;159    }
00002c  bd10              POP      {r4,pc}
;;;160    
                          ENDP

00002e  0000              DCW      0x0000
                  |L9.48|
                          DCD      Task_Delay

                          AREA ||i.UsageFault_Handler||, CODE, READONLY, ALIGN=1

                  UsageFault_Handler PROC
;;;104      */
;;;105    void UsageFault_Handler(void)
000000  bf00              NOP      
                  |L10.2|
;;;106    {
;;;107      /* Go to infinite loop when Usage Fault exception occurs */
;;;108      while (1)
000002  e7fe              B        |L10.2|
;;;109      {
;;;110      }
;;;111    }
;;;112    
                          ENDP

